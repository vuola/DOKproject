apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: taskproject-ss
#  namespace: project
spec:
  serviceName: "taskproject-svc"
  replicas: 1
  selector:
    matchLabels:
      app: tsp
  template:
    metadata:
      labels:
        app: tsp
    spec:
      serviceAccountName: ksa-cloud-sql
      containers:
#      - name: frontend-taskproject
#        image: PROJECT/FRONTEND
#        ports: 
#        - name: frontend-port
#          containerPort: 8080
#        imagePullPolicy: Always
#        envFrom:
#        - secretRef:
#            name: database-keys
#        - configMapRef:
#            name: database-env
      - name: backend-taskproject
        image: PROJECT/BACKEND
        ports: 
        - name: backend-port
          containerPort: 8081
        imagePullPolicy: Always
        envFrom:
        - secretRef:
            name: database-keys
        - configMapRef:
            name: database-env
      - name: adminer
        image: PROJECT/ADMINER
        ports: 
        - name: dbtool-port
          containerPort: 8080
        imagePullPolicy: Always
        envFrom:
        - secretRef:
            name: database-keys
        - configMapRef:
            name: database-env
# Old containerized DB 
#      - name: mariadb
#        image: PROJECT/MARIADB
#        ports:
#        - name: mariadb-port
#          containerPort: 3306
#        envFrom:
#        - secretRef:
#            name: database-keys
#        - configMapRef:
#            name: database-env
#        volumeMounts:
#        - name: mariadb-disk
#          mountPath: /var/lib/mysql
#          subPath: mysql
#        - name: config-map
#          mountPath: /docker-entrypoint-initdb.d
#      volumes:
#      - name: config-map
#        configMap:
#          name: database-sql
#          items:
#            - key: init.sql
#              path: init.sql
      - name: cloud-sql-proxy
      # It is recommended to use the latest version of the Cloud SQL proxy
      # Make sure to update on a regular schedule!
        image: gcr.io/cloudsql-docker/gce-proxy:1.28.0 # make sure the use the latest version
        command:
          - "/cloud_sql_proxy"
          - "-ip_address_types=PRIVATE"
      # By default, the proxy will write all logs to stderr.
      # Write all logs to stdout (except errors
      # which will still go to stderr)
          - "-log_debug_stdout"
      # Default ports MySQL: 3306, Postgres: 5432, SQLServer: 1433
          - "-instances=dwk-gke-360910:europe-north1:instance-for-taskdb=tcp:3306"
        securityContext:
      # The default Cloud SQL proxy image runs as the
      # "nonroot" user and group (uid: 65532) by default.
          runAsNonRoot: true
      # You should use resource requests/limits as a best practice to prevent
      # pods from consuming too many resources and affecting the execution of
      # other pods. You should adjust the following values based on what your
      # application needs. For details, see
      # https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
        resources:
          requests:
            # The proxy's memory use scales linearly with the number of active
            # connections. Fewer open connections will use less memory. Adjust
            # this value based on your application's requirements.
            memory: "100Mi"
            # The proxy's CPU use scales linearly with the amount of IO between
            # the database and the application. Adjust this value based on your
            # application's requirements.
            cpu:    "1"    
  volumeClaimTemplates:
  - metadata:
      name: mariadb-disk
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: 100Mi
